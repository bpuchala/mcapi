import unittest
from random import randint
from mcapi import set_remote_config_url, get_remote_config_url
from mcapi import create_project, __fetch_directory as fetch_directory

url = 'http://mctest.localhost/api'

def fake_name(prefix):
    number="%05d" % randint(0,99999)
    return prefix+number

class TestDirectory(unittest.TestCase):

    @classmethod
    def setUpClass(self):
        set_remote_config_url(url)
        self.base_project_name = fake_name("TestProject-")
        description = "Test project generated by automated test"
        project = create_project(self.base_project_name, description)
        self.base_project_id = project.id
        self.base_project = project

    def test_is_setup_correctly(self):
        self.assertEqual(get_remote_config_url(), url)
        self.assertIsNotNone(self.base_project)
        self.assertIsNotNone(self.base_project.name)
        self.assertEqual(self.base_project_name, self.base_project.name)
        self.assertIsNotNone(self.base_project.id)
        self.assertEqual(self.base_project_id, self.base_project.id)

    def test_get_top_level_directory(self):
        directory1 = fetch_directory(self.base_project,"top")
        directory2 = self.base_project.get_top_directory()
        self.assertEqual(directory1.id, directory2.id)
        self.assertEqual(directory1._project, self.base_project)
        self.assertEqual(directory2._project, self.base_project)

