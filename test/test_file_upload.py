import unittest
from random import randint
from os.path import getsize
from pathlib import Path
from mcapi import set_remote_config_url, get_remote_config_url, create_project, file_upload

url = 'http://mctest.localhost/api'

class TestFileUpload(unittest.TestCase):
    @classmethod
    def setUpClass(self):
        set_remote_config_url(url)
        self.filepath = 'test/test_config_data/fractal.jpg'
        self.base_project_name = "FileUploadTest01"
        description = "Test project generated by automated test"
        project = create_project(self.base_project_name, description)
        self.base_project_id = project.id
        self.base_project = project

    def test_is_setup_correctly(self):
        self.assertEqual(get_remote_config_url(), url)
        self.assertTrue(Path(self.filepath).is_file())
        self.assertIsNotNone(self.base_project)
        self.assertIsNotNone(self.base_project.name)
        self.assertEqual(self.base_project_name, self.base_project.name)
        self.assertIsNotNone(self.base_project.id)
        self.assertEqual(self.base_project_id, self.base_project.id)

    def test_upload_raw(self):
        path = Path(self.filepath)
        file_name = path.parts[-1]
        input_path = str(path.absolute())
        byte_count = self.get_byte_count_for(input_path)
        print byte_count
        print self.base_project
#        self.assertTrue(False)

    def get_byte_count_for(self, path):
        return getsize(path)
