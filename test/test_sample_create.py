import unittest
from random import randint
from mcapi import api
from mcapi import set_remote_config_url, get_remote_config_url
from mcapi import create_project, Template


url = 'http://mctest.localhost/api'


def fake_name(prefix):
    number = "%05d" % randint(0, 99999)
    return prefix+number


class TestSampleCreate(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        set_remote_config_url(url)
        cls.base_project_name = fake_name("TestProject-")
        description = "Test project generated by automated test"
        cls.base_project = create_project(cls.base_project_name, description)
        cls.base_project_id = cls.base_project.id
        name = fake_name("TestExperiment-")
        description = "Test experiment generated by automated test"
        cls.base_experiment = cls.base_project.create_experiment(name, description)
        cls.base_experiment_id = cls.base_experiment.id
        cls.base_process = cls.base_experiment.create_process_from_template(Template.create)
        cls.base_process_id = cls.base_process.id

    def test_is_setup_correctly(self):
        self.assertIsNotNone(self.base_project)
        self.assertIsNotNone(self.base_project.name)
        self.assertEqual(self.base_project_name, self.base_project.name)
        self.assertIsNotNone(self.base_project.id)
        self.assertEqual(self.base_project_id, self.base_project.id)
        self.assertIsNotNone(self.base_experiment)
        self.assertIsNotNone(self.base_experiment.id)
        self.assertEqual(self.base_experiment_id, self.base_experiment.id)
        self.assertIsNotNone(self.base_process)
        self.assertIsNotNone(self.base_process_id)
        self.assertIsNotNone(self.base_process.process_type)
        self.assertEqual(self.base_process.process_type, 'create')
        self.assertTrue(self.base_process.does_transform)

    def test_create_sample(self):
        sample_names = ['Test Sample 1']
        samples = self.base_process.create_samples(sample_names)
        self.assertIsNotNone(samples)
        sample = samples[0]
        self.assertIsNotNone(sample)
        self.assertIsNotNone(sample.name)
        self.assertIsNotNone(sample.property_set_id)
        self.assertEqual(sample.name, sample_names[0])
