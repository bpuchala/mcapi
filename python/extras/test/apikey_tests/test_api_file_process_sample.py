import unittest
import pytest
from random import randint
from materials_commons.api import api
from .base_utils_for_file_tests import _upload_generic_test_file, _original_generic_test_file_path
from .base_utils_for_file_tests import FileTestException
from materials_commons.api import Template


def fake_name(prefix):
    number = "%05d" % randint(0, 99999)
    return prefix + number


class TestApiFileProcessSampleRaw(unittest.TestCase):

    @classmethod
    def setUpClass(cls):
        cls.user = "another@test.mc"
        cls.apikey = "another-bogus-account"
        cls.project_name = fake_name("TestApikeyProject-")
        description = "Test project generated by automated test"
        raw_data = api.create_project(cls.project_name, description, apikey=cls.apikey)
        cls.project_id = raw_data['id']
        experiment_name = fake_name("TestExperiment-")
        experiment_description = "Test experiment generated by automated test"
        experiment_raw = api.create_experiment(
            cls.project_id, experiment_name, experiment_description, apikey=cls.apikey)
        cls.experiment_id = experiment_raw['id']
        cls.template_id = Template.create
        process_record_raw = api.create_process_from_template(
            cls.project_id, cls.experiment_id, cls.template_id, apikey=cls.apikey)
        cls.process_id = process_record_raw['id']
        try:
            file_record_raw = _upload_generic_test_file(cls.project_id, cls.apikey)
            cls.file_id = file_record_raw['id']
            cls.file_name = file_record_raw['name']
        except FileTestException:
            pytest.fail("Unexpected, exception", pytrace=True)

    def test_add_files_to_process_raw(self):
        stub_process = {'id': self.process_id, }
        results = api.add_files_to_process(
            self.project_id, self.experiment_id, stub_process, [self.file_id], apikey=self.apikey)
        print("--")
        print(results)

    def test_get_all_files_for_process_raw(self):
        # def get_all_files_for_process(project_id, experiment_id, process_id, remote=None):
        pass

    def test_link_files_to_sample_raw(self):
        # def link_files_to_sample(project_id, sample_id, file_id_list, remote=None):
        pass
